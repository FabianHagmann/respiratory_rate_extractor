import numpy as np
from matplotlib import pyplot as plt

import analysis

time_series = [np.float64(1.0), np.float64(0.979910928665566), np.float64(0.9980818040745363), np.float64(0.8988761512417712), np.float64(0.9213367968401864), np.float64(0.9571980802875074), np.float64(0.829708538396783), np.float64(0.8254421545585117), np.float64(0.7061810757928441), np.float64(0.7238122013460188), np.float64(0.6282206728724752), np.float64(0.5572771420057712), np.float64(0.5688978468283933), np.float64(0.491379430397283), np.float64(0.4271291684959367), np.float64(0.38291965164789504), np.float64(0.42395087364855105), np.float64(0.4645107257095045), np.float64(0.5558219083101162), np.float64(0.5370911203473964), np.float64(0.5740025637417356), np.float64(0.6860657792840666), np.float64(0.6984191325657034), np.float64(0.7163618812672273), np.float64(0.6743580203524342), np.float64(0.6957957040989233), np.float64(0.6925838800422877), np.float64(0.6974932443592909), np.float64(0.6836050163708857), np.float64(0.5485835892400074), np.float64(0.49382578106863445), np.float64(0.4926878410383772), np.float64(0.49189771805215404), np.float64(0.4925248052166852), np.float64(0.4759428883810285), np.float64(0.461070440930535), np.float64(0.4856731326488158), np.float64(0.49058887176584776), np.float64(0.533079153768034), np.float64(0.6069916502891674), np.float64(0.6969128062721601), np.float64(0.6897179271881887), np.float64(0.7437142552875967), np.float64(0.7493975660768971), np.float64(0.7053650108320026), np.float64(0.7136799399753707), np.float64(0.7532391782377038), np.float64(0.7158346848801314), np.float64(0.6883734097197775), np.float64(0.6766565896104333), np.float64(0.6874927911487183), np.float64(0.5819786353884568), np.float64(0.47736979861535567), np.float64(0.5235008366724052), np.float64(0.457945119145416), np.float64(0.4526055667097112), np.float64(0.41248640876433706), np.float64(0.3793286666933272), np.float64(0.4363470859549179), np.float64(0.5583683530195519), np.float64(0.5079672210106371), np.float64(0.5147873319020022), np.float64(0.5041276708836092), np.float64(0.4930736308121495), np.float64(0.5109524139941547), np.float64(0.5996034007035598), np.float64(0.682180487623268), np.float64(0.7402073040494684), np.float64(0.765789161927402), np.float64(0.656625058180327), np.float64(0.701515963882051), np.float64(0.7018690666130836), np.float64(0.7429364825094242), np.float64(0.7200052874465683), np.float64(0.6978898233296663), np.float64(0.7023436747679627), np.float64(0.702892500363427), np.float64(0.5752654652336221), np.float64(0.5336292209220154), np.float64(0.49550568543395296), np.float64(0.4797383741780147), np.float64(0.48020620101156697), np.float64(0.4089726108277627), np.float64(0.39208662182518317), np.float64(0.36351638356371774), np.float64(0.4373389217755518), np.float64(0.48186329998711935), np.float64(0.5286903424003297), np.float64(0.565822782603944), np.float64(0.6812476510880849), np.float64(0.6933421218990761), np.float64(0.7431300417097526), np.float64(0.8045138134814633), np.float64(0.8532375242420936), np.float64(0.857282678886527), np.float64(0.8859388821439724), np.float64(0.8525725297249435), np.float64(0.8199692837664463), np.float64(0.7982657038434217), np.float64(0.6695737699425469), np.float64(0.4620812050198973), np.float64(0.37355727805910566), np.float64(0.1640542936072651), np.float64(0.11917790177769519), np.float64(0.10198908216670974), np.float64(0.17643342185607638), np.float64(0.2335753431981733), np.float64(0.2412013325064326), np.float64(0.27982773423358265), np.float64(0.28532513843430557), np.float64(0.27503145306857535), np.float64(0.26545578609742426), np.float64(0.3183589935947594), np.float64(0.406990616390224), np.float64(0.5099050857410149), np.float64(0.49932998115264116), np.float64(0.5382071117163546), np.float64(0.5356760884227024), np.float64(0.5092848090217246), np.float64(0.4209011124928588), np.float64(0.38864492848025295), np.float64(0.30042891455421666), np.float64(0.3177299751506879), np.float64(0.25955802743561274), np.float64(0.22135792214416952), np.float64(0.1799862670734622), np.float64(0.022278383746312556), np.float64(0.016875570074069333), np.float64(0.027946055297223407), np.float64(0.022912368424452018), np.float64(0.0), np.float64(0.028289240122077012), np.float64(0.10883395885129532), np.float64(0.20838937456959178), np.float64(0.2831595680797365), np.float64(0.20464300640508284), np.float64(0.2026992025198884), np.float64(0.3755348435381131), np.float64(0.4231674449152871), np.float64(0.47726025856950993), np.float64(0.549091857358375), np.float64(0.5927119257567363), np.float64(0.6853400937157796), np.float64(0.6832412406355316), np.float64(0.6870396960099261), np.float64(0.6153498378492722), np.float64(0.6047794017332843), np.float64(0.5639960334928165), np.float64(0.5322187558393826), np.float64(0.4416801619602695)]


fig, axes = plt.subplots(5, 1, figsize=(10, 10), sharex=True)

for i in range(5):
    smoothed_time_series = analysis.smooth_time_series(time_series, i + 1)
    axes[i].plot(smoothed_time_series)
    axes[i].set_title(f'Time Series (sigma = {i+1})')
    axes[i].set_ylabel('Value')

axes[4].set_xlabel('Time')

plt.tight_layout()

plt.show()